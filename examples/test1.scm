(define data
  '(#(tag-sym #(2 1) "day-of-week")
    #(tag-sym #(2 13) "day")
    #(tag-sym #(2 17) "month")
    #(tag-sym #(2 23) "year")
    #(tag-to #(2 28) "<-")
    #(tag-sym #(3 5) "a")
    #(tag-to #(3 7) "<-")
    #(tag-lprn #(3 10) #\()
    #(tag-sym #(3 11) "14")
    #(tag-mns #(3 14) "-")
    #(tag-sym #(3 16) "month")
    #(tag-rprn #(3 21) #\))
    #(tag-kw #(3 23) "mod")
    #(tag-num #(3 27) 12)
    #(tag-sym #(4 5) "b")
    #(tag-to #(4 7) "<-")
    #(tag-sym #(4 10) "year")
    #(tag-mns #(4 15) "-")
    #(tag-sym #(4 17) "a")
    #(tag-sym #(5 5) "m")
    #(tag-to #(5 7) "<-")
    #(tag-sym #(5 10) "month")
    #(tag-pls #(5 16) "+")
    #(tag-lprn #(5 18) #\()
    #(tag-sym #(5 19) "a")
    #(tag-mul #(5 21) "*")
    #(tag-num #(5 23) 12)
    #(tag-rprn #(5 25) #\))
    #(tag-mns #(5 27) "-")
    #(tag-num #(5 29) 2)
    #(tag-lprn #(7 5) #\()
    #(tag-sym #(7 6) "7000")
    #(tag-pls #(7 11) "+")
    #(tag-sym #(7 13) "day")
    #(tag-pls #(7 17) "+")
    #(tag-sym #(7 19) "y")
    #(tag-pls #(7 21) "+")
    #(tag-lprn #(7 23) #\()
    #(tag-sym #(7 24) "y")
    #(tag-kw #(7 26) "mod")
    #(tag-num #(7 30) 4)
    #(tag-rprn #(7 31) #\))
    #(tag-pls #(7 33) "+")
    #(tag-lprn #(7 35) #\()
    #(tag-sym #(7 36) "y")
    #(tag-kw #(7 38) "mod")
    #(tag-num #(7 42) 400)
    #(tag-rprn #(7 45) #\))
    #(tag-pls #(7 47) "+")
    #(tag-lprn #(7 49) #\()
    #(tag-sym #(7 50) "31")
    #(tag-mul #(7 53) "*")
    #(tag-sym #(7 55) "m")
    #(tag-kw #(7 57) "mod")
    #(tag-num #(7 61) 12)
    #(tag-rprn #(7 63) #\))
    #(tag-mns #(8 9) "-")
    #(tag-lprn #(8 11) #\()
    #(tag-sym #(8 12) "y")
    #(tag-kw #(8 14) "mod")
    #(tag-num #(8 18) 100)
    #(tag-rprn #(8 21) #\))
    #(tag-rprn #(8 22) #\))
    #(tag-kw #(8 24) "div")
    #(tag-num #(8 28) 7)))

(define res
  '(program
    #(func-def
      (#(func-decl (#(func-name #(tag-sym #(2 1) "day-of-week"))
                    #(argument #(tag-sym #(2 13) "day"))
                    #(argument #(tag-sym #(2 17) "month"))))
       #(func-to #(tag-to #(2 28) "<-"))
       #(func-def
         #(func-decl (#(func-name #(tag-sym #(3 5) "a"))))
         #(func-to #(tag-to #(3 7) "<-"))
         #(expr))
       #(func-def
         #(func-decl (#(func-name #(tag-sym #(4 5) "b"))))
         #(func-to #(tag-to #(4 7) "<-"))
         #(expr))
       #(func-def
         #(func-decl (#(func-name #(tag-sym #(5 5) "m"))))
         #(func-to #(tag-to #(5 7) "<-"))
         #(expr))
       #(expr)))))
